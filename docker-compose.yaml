version: '3.8'

services:
  web:
    container_name: nginx
    image: nginx:alpine
    depends_on:
      - app
    ports:
      - ${NGINX_HOST_PORT}:80
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    restart: always
    env_file:
      - .env

  app:
    container_name: history_blog
    command: bash -c 'uvicorn app.main:app --host 0.0.0.0 --port 8000'
    build: ./
    depends_on:
      - mongo_db
    volumes:
      - ./app:/src/app
    ports:
      - ${APP_HOST_PORT}:8000
    expose:
      - 9000
    environment:
      - TZ=Asia/Yekaterinburg
    restart: always
    env_file:
      - .env

  mongo_db:
    container_name: mongo_db
    image: mongo
    ports:
      - ${MONGO_HOST_PORT}:27017
    volumes:
      - .mongo_data:/data/db
    restart: always
    env_file:
      - .env

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.47.0
    volumes:
      - ./metrics/prometheus/:/etc/prometheus/
    expose:
      - 9090
    restart: always
    env_file:
      - .env

  node_exporter:
    container_name: node_exporter
    image: prom/node-exporter:v1.5.0
    expose:
      - ${NODE_EXPORTER_HOST_PORT}:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    restart: always
    env_file:
      - .env

  grafana:
    container_name: grafana
    user: "0:0"
    image: grafana/grafana-oss:9.4.7
    ports:
      - ${GRAFANA_HOST_PORT}:3000
    volumes:
      - ./.grafana_data:/var/lib/grafana
      - ./metrics/grafana/datasources:/etc/grafana/provisioning/datasources
      - ./metrics/grafana/provisioning:/etc/grafana/provisioning/dashboards
    restart: always
    env_file:
      - .env
